rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // USERS
    // Allow anyone to read artist profiles for public display.
    // Only the authenticated user can write to their own document.
    match /users/{userId} {
      allow read: if resource.data.role == 'artist';
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // EVENTS: Publicly readable, only artists/admins can create/update.
    match /events/{eventId} {
      allow read: if true;
      allow create, update: if request.auth != null; // Simplified for this context
    }

    // MOVIES: Publicly readable, only admins can create/update.
    match /movies/{movieId} {
      allow read: if true;
      allow create, update: if request.auth != null; // Simplified for this context
    }

    // TICKETS: Users can only read/write their own tickets.
    match /tickets/{ticketId} {
        allow read: if request.auth != null && request.auth.uid == resource.data.userId;
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // VERIFICATION REQUESTS: Only admins can read/write.
    match /verificationRequests/{requestId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // APP STATUS: Only admins can write.
    match /app-status/{statusId} {
        allow read: if true;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
