rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can be read by any authenticated user (for artist lists)
    // but only written to by the user themselves.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Events are public, but can only be created/updated by artists or admins.
    match /events/{eventId} {
      allow read: if true;
      allow write: if request.auth != null && (request.auth.token.role == "artist" || request.auth.token.role == "admin");
    }

    // Tickets can only be created by the user who owns them,
    // and can only be read by that same user.
    match /tickets/{ticketId} {
        allow read, create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Movies are public, but can only be created by admins.
    match /movies/{movieId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.token.role == "admin";
    }

    // Subscriptions can only be read or written by the user who owns them.
    match /subscriptions/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Verification requests can only be read or written to by admins
    match /verificationRequests/{requestId} {
      allow read, write: if request.auth != null && request.auth.token.role == "admin";
      allow create: if request.auth != null && request.auth.token.role == "artist";
    }
  }
}