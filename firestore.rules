
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Allow authenticated users to read any user profile (needed for listing artists),
      // but only allow users to write to their own document.
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    match /events/{eventId} {
      // Allow anyone to read events, but only artists can create/update them.
      // This rule might need to be more specific (e.g., only the artist owner can write).
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'artist';
    }

    match /tickets/{ticketId} {
      // A user can create tickets for themselves, and can only read their own tickets.
      allow read, create: if request.auth.uid == resource.data.userId;
    }

    match /movies/{movieId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /subscriptions/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    match /verificationRequests/{requestId} {
      // Only admins can read requests. Artists can create them.
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'artist';
    }
  }
}
