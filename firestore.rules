rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function getRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isAdmin() {
      return isAuthenticated() && getRole(request.auth.uid) == 'admin';
    }

    function isArtist() {
      return isAuthenticated() && getRole(request.auth.uid) == 'artist';
    }

    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isUser(userId) || isAdmin();
    }

    match /events/{eventId} {
      allow read: if true;
      allow create: if isArtist();
      allow update, delete: if (isArtist() && resource.data.artistId == request.auth.uid) || isAdmin();
    }

    match /tickets/{ticketId} {
      allow read: if isUser(resource.data.userId);
      allow create: if isUser(request.resource.data.userId);
    }

    match /movies/{movieId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }
    
    match /verificationRequests/{requestId} {
      allow read, update: if isAdmin();
      allow create: if isArtist();
    }

    match /subscriptions/{userId} {
      allow read, write: if isUser(userId);
    }
  }
}
